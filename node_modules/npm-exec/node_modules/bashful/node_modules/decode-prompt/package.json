{
  "name": "decode-prompt",
  "version": "0.0.2",
  "description": "parse bash $PS1 escape characters",
  "main": "index.js",
  "browser": {
    "os": "./lib/os.js"
  },
  "dependencies": {
    "strftime": "~0.6.1"
  },
  "devDependencies": {
    "tape": "~1.0.4",
    "tap": "~0.4.3"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/6..latest",
      "ff/3.6",
      "firefox/latest",
      "chrome/10",
      "chrome/latest",
      "safari/5.1",
      "safari/latest",
      "opera/12"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/decode-prompt.git"
  },
  "homepage": "https://github.com/substack/decode-prompt",
  "keywords": [
    "bash",
    "PS1",
    "escape",
    "shell",
    "env"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# decode-prompt\n\nparse bash \n[$PS1 escape characters](https://www.gnu.org/software/bash/manual/bash.html#Printing-a-Prompt)\n\n[![browser support](https://ci.testling.com/substack/decode-prompt.png)](http://ci.testling.com/substack/decode-prompt)\n\n[![build status](https://secure.travis-ci.org/substack/decode-prompt.png)](http://travis-ci.org/substack/decode-prompt)\n\n# example\n\n``` js\nvar decode = require('../');\nvar s = decode(process.argv[2], { env: process.env });\nconsole.log(s);\n```\n\n```\n$ node example/prompt.js '\\w \\$ '\n~/projects/decode-prompt $\n$ \n```\n\n```\nsubstack : decode-prompt $ node example/prompt.js \"<$PS1>\"\n<substack : decode-prompt $ >\nsubstack : decode-prompt $ \n```\n\n# methods\n\n``` js\nvar decode = require('decode-prompt')\n```\n\n## decode(str, opts)\n\nReturn the decoded bash `$PS1` string `str`.\n\n* `opts.env` - environment variables to use. `$NAME` and `${NAME}` are decoded and\nsome options use `opts.env` as a fallback default value.\n* `opts.now` - date for all the time functions to use, default: `new Date`\n* `opts.hostname` - the `os.hostname()` value to use, otherwise `os.hostname()`\n* `opts.jobs` - number of jobs currently managed by the shell, default: 0\n* `opts.tty` - the shell's tty name (like the `tty` command gives), default: -1\n* `opts.shell` - the current $SHELL, default: `opts.env.SHELL`.\n* `opts.user` - username to use, default: `opts.env.USER`.\n* `opts.version` - version of the shell (bash), default: `'0.0.0'`\n* `opts.cwd` - current working directory,\ndefault: `opts.env.PWD || process.cwd()`\n* `opts.dirtrim` - number of directories to trim output at with an ellipsis,\ndefault: `opts.env.DIRTRIM || 0`\n* `opts.history` - history number, default: `0`\n* `opts.command` - command number, default: `0`\n* `opts.uid` - uid, default: `opts.env.UID || process.getuid()`\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install decode-prompt\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "_id": "decode-prompt@0.0.2",
  "_from": "decode-prompt@~0.0.1"
}
